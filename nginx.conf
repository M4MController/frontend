worker_processes auto;

events {
    use epoll;
    multi_accept on;
}

http {
    error_log /dev/stdout info;

    upstream backend_receiver {
        server receiver:5000;
    }

    upstream backend_gateway {
        server gateway:5000;
    }

    upstream backend_auth {
        server auth:5000;
    }

    gzip                     on;
    gzip_static              on;
    gzip_disable             "msie6";
    gzip_vary                on;
    gzip_proxied             any;
    gzip_http_version        1.0;
    gzip_comp_level          6;
    gzip_buffers             16 8k;
    gzip_min_length          256;
    gzip_types
        text/plain
        text/javascript
        application/json
        application/javascript;

    ssl_certificate     /etc/ssl/fullchain.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;

    server {
        server_name meter4.me api.meter4.me auth.meter4.me receiver.meter4.me;
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        server_name meter4.me;
        listen 443 ssl http2;

        include /etc/nginx/mime.types;

        location / {
            root /usr/html;
            index index.html;
            try_files $uri $uri/ /;
        }

        location /api/ {
            proxy_pass http://backend_gateway/;
        }

        location /api/auth/ {
            proxy_pass http://backend_auth/;
        }
    }

    server {
        server_name api.meter4.me;
        listen 443 ssl http2;

        location / {
            proxy_pass http://backend_gateway/;
            add_header Access-Control-Allow-Origin https://meter4.me always;
        }
    }

    server {
        server_name auth.meter4.me;
        listen 443 ssl http2;

        location / {
            proxy_pass http://backend_auth/;
            add_header Access-Control-Allow-Origin https://meter4.me always;
            add_header Access-Control-Allow-Headers Content-Type;
        }
    }

    server {
        server_name receiver.meter4.me;
        listen 443 ssl http2;

        location / {
            proxy_pass http://backend_receiver/;
        }
    }
}
